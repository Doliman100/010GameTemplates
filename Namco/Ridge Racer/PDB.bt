//------------------------------------------------
//--- 010 Editor v11.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

LittleEndian();
BitfieldDisablePadding();

typedef enum <byte> 
{
    String = 2,
    UInt = 5,
    Int = 6,
    Float = 7,
    Color = 8,
    Vec2 = 9,
    Vec3 = 10,
    Rect = 11,
    Short = 12,
} PropertyColumnType;

typedef struct
{
    float X;
    float Y;
} Vector2;

typedef struct
{
    float X;
    float Y;
    float Z;
} Vector3;

typedef struct
{
    float X;
    float Y;
    float W;
    float H;
} Rectangle;

typedef struct 
{
    int ColumnNameOffsetRelative <format=hex, fgcolor=cRed>;
    PropertyColumnType Type <fgcolor=cLtRed>;
    ubyte DataSize <fgcolor=cGreen>;
    byte c;
    byte d;

    int UnkUnimportant <format=hex, fgcolor=cRed>; // Gets wiped anyway?

    local int cPos = FTell();
    FSkip(ColumnNameOffsetRelative - 0x0C);
    string Name <bgcolor=cGray>;

    FSeek(cPos);
    switch (Type)
    {
        case String:
            string Value<fgcolor=cLtBlue>; break;
        case Int:
            int Value <fgcolor=cLtBlue>; break;
        case UInt:
            uint Value <fgcolor=cLtBlue>; break;
        case Float:
            float Value <fgcolor=cLtBlue>; break;
        case Color:
            int Value <fgcolor=cLtBlue>; 
            break;
        case Vec2:
            Vector2 Value <fgcolor=cLtBlue>; break;
        case Vec3:
            Vector3 Value <fgcolor=cLtBlue>; break;
        case Rect:
            Rectangle Value <fgcolor=cLtBlue>; 
            break;
        case Short:
            short Value <fgcolor=cLtBlue>; 
            break;
        default:
            //Printf("help");
    }

    

    FSeek(cPos + DataSize);
} ColumnDef <optimize=false>;

typedef struct
{ 
    int unk;

    short ChildArrayIndex;
    short offset2;
    
    short offset2;
    short ColumnCount <fgcolor=cGreen>;

    int NameOffsetRelative <format=hex, fgcolor=cRed>;
    int RowDataOffset <format=hex, fgcolor=cRed>;

    local int cPos = FTell();
    FSkip(NameOffsetRelative - 0x14);
    string Name <bgcolor=cDkGray>;

    FSeek(cPos);
    if (RowDataOffset != 0 && ColumnCount != 0)
    {
        FSkip(RowDataOffset - 0x14);
        ColumnDef column[ColumnCount];
    }
    FSeek(cPos);
} Property <optimize=false>;

struct PDB
{
    char Magic[4];
    int Version <format=hex>;
    int PropertyCount;

    local int i = 0;
    struct 
    {
        Property property[PropertyCount];
    } Properties;
    
    
} PropertyDB;